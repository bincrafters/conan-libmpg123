diff --git a/ports/cmake/src/libmpg123/CMakeLists.txt b/ports/cmake/src/libmpg123/CMakeLists.txt
index ad69b7a..77a9f65 100644
--- a/ports/cmake/src/libmpg123/CMakeLists.txt
+++ b/ports/cmake/src/libmpg123/CMakeLists.txt
@@ -47,7 +47,7 @@ add_library(${TARGET}
     "${CMAKE_CURRENT_SOURCE_DIR}/../../../../src/libmpg123/$<$<BOOL:${LFS_SENSITIVE}>:lfs_wrap.c>"
     $<TARGET_OBJECTS:compat>)
 
-if((MSVC AND CMAKE_GENERATOR_PLATFORM STREQUAL "x64") OR (NOT MSVC AND CMAKE_SYSTEM_PROCESSOR MATCHES "([xX]86_|AMD|amd)64"))
+if((MSVC AND CMAKE_VS_PLATFORM_NAME STREQUAL "x64") OR (NOT MSVC AND CMAKE_SYSTEM_PROCESSOR MATCHES "([xX]86_|AMD|amd)64"))
     if(HAVE_FPU)
         set(PLATFORM_DEFINITIONS OPT_MULTI OPT_X86_64 OPT_AVX OPT_GENERIC OPT_GENERIC_DITHER)
         set(PLATFORM_SOURCES
@@ -80,7 +80,7 @@ if((MSVC AND CMAKE_GENERATOR_PLATFORM STREQUAL "x64") OR (NOT MSVC AND CMAKE_SYS
     else()
         set(PLATFORM_DEFINITIONS OPT_GENERIC)
     endif()
-elseif((MSVC AND CMAKE_GENERATOR_PLATFORM MATCHES "|Win32") OR (NOT MSVC AND CMAKE_SYSTEM_PROCESSOR MATCHES "i386"))
+elseif((MSVC AND CMAKE_VS_PLATFORM_NAME STREQUAL "Win32") OR (NOT MSVC AND CMAKE_SYSTEM_PROCESSOR MATCHES "i386"))
     if(TRUE)
         set(PLATFORM_DEFINITIONS OPT_I386)
         target_sources(${TARGET} PRIVATE
@@ -123,11 +123,13 @@ if(MSVC)
     if(NOT YASM_ASSEMBLER)
         message(FATAL_ERROR "Couldn't find yasm assembler. Please set YASM_ASSEMBLER variable")
     endif()
-    if((MSVC AND CMAKE_GENERATOR_PLATFORM STREQUAL "x64") OR (NOT MSVC AND CMAKE_SYSTEM_PROCESSOR MATCHES "([xX]86_|AMD|amd)64"))
+    if((MSVC AND CMAKE_VS_PLATFORM_NAME STREQUAL "x64") OR (NOT MSVC AND CMAKE_SYSTEM_PROCESSOR MATCHES "([xX]86_|AMD|amd)64"))
         set(MACHINE amd64)
-    elseif((MSVC AND CMAKE_GENERATOR_PLATFORM MATCHES "|Win32") OR (NOT MSVC AND CMAKE_SYSTEM_PROCESSOR MATCHES "i386"))
+    elseif((MSVC AND CMAKE_VS_PLATFORM_NAME STREQUAL "Win32") OR (NOT MSVC AND CMAKE_SYSTEM_PROCESSOR MATCHES "i386"))
         set(MACHINE x86)
     endif()
+    message(${CMAKE_VS_PLATFORM_NAME})
+    message(${MACHINE})
     list(TRANSFORM PLATFORM_DEFINITIONS PREPEND /D)
     foreach(FILE ${PLATFORM_SOURCES})
         get_filename_component(FILENAME ${FILE} NAME)
